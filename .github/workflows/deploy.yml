name: Build and Push Docker Image

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  test-and-build:
    name: Test and Build Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5.1.0
        with:
          go-version: '>=1.23.0'

      - name: Install dependencies
        run: go mod download

      - name: Run tests
        run: go test -v ./...
      
      - name: Build Docker image
        run: |
          docker build -t goshorty:latest .
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          docker tag goshorty:latest goshorty:$TIMESTAMP
          echo "TIMESTAMP=$TIMESTAMP" >> $GITHUB_ENV

  push-to-ecr:
    name: Push Docker image to ECR
    runs-on: ubuntu-latest
    needs: build-and-test
    environment:
      name: 'DEV'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          role-to-assume: ${{ secrets.ECR_WORKFLOW_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-session-name: Push-To-ECR

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2.0.1

      - name: Tag and push Docker image
        run: |
          docker tag goshorty:latest ${{ secrets.ECR_LOGIN_SERVER }}/goshorty:latest
          docker tag goshorty:${{ env.TIMESTAMP }} ${{ secrets.ECR_LOGIN_SERVER }}/goshorty:${{ env.TIMESTAMP }}
          docker push ${{ secrets.ECR_LOGIN_SERVER }}/goshorty:latest
          docker push ${{ secrets.ECR_LOGIN_SERVER }}/goshorty:${{ env.TIMESTAMP }}

      - name: Logout from ECR
        run: docker logout ${{ secrets.ECR_LOGIN_SERVER }}