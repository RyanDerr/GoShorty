basePath: /api/v1
definitions:
  request.ShortenUrlRequest:
    properties:
      custom_short:
        type: string
      expiration:
        type: string
      url:
        type: string
    type: object
  request.UserAuthInput:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  response.JwtResponse:
    properties:
      jwt:
        type: string
    type: object
  response.ResponseErrorModel:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  response.ShortenUrlResponse:
    properties:
      custom_short:
        type: string
      expiration:
        type: string
      url:
        type: string
    type: object
  response.UserResponse:
    properties:
      id:
        type: integer
      username:
        type: string
    type: object
host: localhost
info:
  contact: {}
  description: This is the API for GoShorty, a URL shortening service
  title: GoShorty API
  version: 0.1.0
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate a user and return a JWT token
      parameters:
      - description: User credentials
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/request.UserAuthInput'
      produces:
      - application/json
      responses:
        "200":
          description: JWT token
          schema:
            $ref: '#/definitions/response.JwtResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ResponseErrorModel'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ResponseErrorModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ResponseErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ResponseErrorModel'
      summary: Login a user
      tags:
      - Auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user with a username and password
      parameters:
      - description: User credentials
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/request.UserAuthInput'
      produces:
      - application/json
      responses:
        "201":
          description: User registered successfully
          schema:
            $ref: '#/definitions/response.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ResponseErrorModel'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/response.ResponseErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ResponseErrorModel'
      summary: Register a new user
      tags:
      - Auth
  /url/{short}:
    get:
      consumes:
      - application/json
      description: Resolve a shortened URL to its original URL
      parameters:
      - description: Short to resolve
        in: path
        name: short
        required: true
        type: string
      produces:
      - application/json
      responses:
        "301":
          description: Redirect to original URL
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ResponseErrorModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ResponseErrorModel'
        "429":
          description: Rate Limit Exceeded
          schema:
            $ref: '#/definitions/response.ResponseErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ResponseErrorModel'
      summary: Resolve a shortened URL
      tags:
      - URL
  /url/shorten:
    post:
      consumes:
      - application/json
      description: Shorten a given URL and return the shortened version
      parameters:
      - description: URL to be shortened
        in: body
        name: shortenUrl
        required: true
        schema:
          $ref: '#/definitions/request.ShortenUrlRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Shortened URL
          schema:
            $ref: '#/definitions/response.ShortenUrlResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ResponseErrorModel'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/response.ResponseErrorModel'
        "429":
          description: Rate Limit Exceeded
          schema:
            $ref: '#/definitions/response.ResponseErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ResponseErrorModel'
      summary: Shorten a URL
      tags:
      - URL
schemes:
- https
swagger: "2.0"
